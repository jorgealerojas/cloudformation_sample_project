---
AWSTemplateFormatVersion: 2010-09-09

Description: Sample PROD Service Definition

Parameters:
  Cluster:
    Description: Please provide the ECS Cluster ID that this service should run on
    Type: String

  SystemName:
    Description: Identifier for the current system and environment
    Type: String

  DeploymentEnv:
    Description: The environment to be deployed
    Type: String

  Subnets:
    Description: Choose which subnets this ECS cluster should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  SecurityGroup:
    Description: Select the Security Group to use for the ECS cluster hosts
    Type: AWS::EC2::SecurityGroup::Id
    
  CloudWatchLogsGroupName:
    Description: Cloudwtch log group name
    Type: String


Conditions:
  IsProd: !Equals [!Ref DeploymentEnv, prod]
  IsStg: !Equals [!Ref DeploymentEnv, stg]
  IsDev: !Equals [!Ref DeploymentEnv, dev]

Resources:
  BackendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${SystemName}-backend-pro"
      NetworkMode: awsvpc
      RequiresCompatibilities:
      - FARGATE
      ExecutionRoleArn: !Sub "arn:aws:iam::123456789012:role/Sample-task-exec-role"
      Cpu: !If [IsProd, 2048, 1024]
      Memory: !If [IsProd, 4GB, 2GB]
      TaskRoleArn: !Sub "arn:aws:iam::123456789012:role/Sample-task-exec-role"
      ContainerDefinitions:
      - Name: !Sub "${SystemName}-container-pro"
        Essential: true
        Image: !Sub "123456789012.dkr.ecr.us-east-1.amazonaws.com/sample:production"
        MemoryReservation: 128
        Secrets:
        - Name: POSTGRES_HOST
          ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:123456789012:secret:postgres-host"
        - Name: POSTGRES_PORT
          ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:123456789012:secret:postgres-port"
        - Name: POSTGRES_DB
          ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:123456789012:secret:postgres-db"
        - Name: POSTGRES_USER
          ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:123456789012:secret:postgres-user"
        - Name: POSTGRES_PASSWORD
          ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:123456789012:secret:postgres-password"
        - Name: JWT_EXPIRATION_TIME
          ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:123456789012:secret:jwt-expiration-time"
        - Name: JWT_SECRET
          ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:123456789012:secret:jwt-secret"
        - Name: TWILIO_ACCOUNT_SID
          ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:123456789012:secret:twilio-account-sid"
        - Name: TWILIO_AUTH_TOKEN
          ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:123456789012:secret:twilio-auth-token"
        - Name: TWILIO_PHONE_NUMBER
          ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:123456789012:secret:twilio-phone-number"
        PortMappings:
        - ContainerPort: 3000
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-create-group: "true"
            awslogs-group: !Ref CloudWatchLogsGroupName
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: !Sub "${SystemName}"

  BackendService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: !If [IsProd, 2, 1]
      LaunchType: FARGATE
      LoadBalancers:
      - ContainerName: !Sub "${SystemName}-container-pro"
        ContainerPort: 3000
        TargetGroupArn: !Sub "arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/TG-Sample-Backend-Pro/7bcf82c53eb984e5"
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
          - !Ref SecurityGroup
          Subnets: !Ref Subnets
      SchedulingStrategy: REPLICA
      ServiceName: !Sub "${SystemName}-service-pro"
      TaskDefinition: !Ref BackendTaskDefinition
      